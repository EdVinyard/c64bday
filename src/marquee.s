;
; File generated by cc65 v 2.16 - Ubuntu 2.16-2
;
	.fopt		compiler,"cc65 v 2.16 - Ubuntu 2.16-2"
	.setcpu		"6502"
	.smart		on
	.autoimport	on
	.case		on
	.debuginfo	off
	.importzp	sp, sreg, regsave, regbank
	.importzp	tmp1, tmp2, tmp3, tmp4, ptr1, ptr2, ptr3, ptr4
	.macpack	longbranch
	.forceimport	__STARTUP__
	.export		_EMPTY_BLOCK
	.export		_FULL_BLOCK
	.export		_EMPTY_TO_FULL
	.export		_FULL_TO_EMPTY
	.export		_ANIMATIONS
	.export		_CONTENT
	.export		_main

.segment	"DATA"

_ANIMATIONS:
	.addr	_EMPTY_BLOCK
	.addr	_FULL_BLOCK
	.addr	_EMPTY_TO_FULL
	.addr	_FULL_TO_EMPTY

.segment	"RODATA"

_EMPTY_BLOCK:
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$60
	.byte	$60
_FULL_BLOCK:
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
	.byte	$E0
_EMPTY_TO_FULL:
	.byte	$60
	.byte	$67
	.byte	$6A
	.byte	$76
	.byte	$E1
	.byte	$F5
	.byte	$F4
	.byte	$E5
_FULL_TO_EMPTY:
	.byte	$E0
	.byte	$E7
	.byte	$EA
	.byte	$F6
	.byte	$61
	.byte	$75
	.byte	$74
	.byte	$65
_CONTENT:
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$00
	.byte	$02
	.byte	$01
	.byte	$03
	.byte	$00

; ---------------------------------------------------------------
; void __near__ main (void)
; ---------------------------------------------------------------

.segment	"CODE"

.proc	_main: near

.segment	"DATA"

L0035:
	.byte	$00
L0037:
	.byte	$00
L0039:
	.byte	$00
L003C:
	.byte	$05

.segment	"BSS"

L003B:
	.res	2,$00

.segment	"CODE"

	jmp     L0040
L003E:	ldx     #$00
	lda     #$00
	sta     L0037
L0042:	ldx     #$00
	lda     L0037
	cmp     #$08
	jsr     boolult
	jne     L0045
	jmp     L0040
L0045:	lda     #100
L004C:	cmp     $d012
	bne     L004C
	lda     #0
	sta     $d020
	ldx     #$00
	lda     L0037
	ldy     #$30
	jsr     incaxy
	ldx     #$00
	sta     $0428
	ldx     #$00
	lda     #$00
	sta     L0035
L0059:	ldx     #$00
	lda     L0035
	cmp     #$08
	jsr     boolult
	jne     L005C
	jmp     L005A
L005C:	inc     $d020
	lda     #<(_CONTENT)
	ldx     #>(_CONTENT)
	clc
	adc     L0035
	bcc     L0067
	inx
L0067:	ldy     #$00
	jsr     ldauidx
	sta     L0039
	ldx     #$00
	lda     L0039
	jsr     aslax1
	clc
	adc     #<(_ANIMATIONS)
	tay
	txa
	adc     #>(_ANIMATIONS)
	tax
	tya
	ldy     #$01
	jsr     ldaxidx
	sta     L003B
	stx     L003B+1
	lda     L003B
	ldx     L003B+1
	jsr     pushax
	ldx     #$00
	lda     L0037
	jsr     tosaddax
	ldy     #$00
	jsr     ldauidx
	sta     L003C
	ldx     #$00
	lda     L0035
	jsr     pushax
	ldx     #$04
	lda     #$00
	jsr     tosaddax
	jsr     pushax
	ldx     #$00
	lda     L003C
	ldy     #$00
	jsr     staspidx
	ldx     #$00
	lda     L0035
	pha
	clc
	adc     #$01
	sta     L0035
	pla
	jmp     L0059
L005A:	inc     $d020
	ldx     #$00
	lda     L0037
	pha
	clc
	adc     #$01
	sta     L0037
	pla
	jmp     L0042
L0040:	jmp     L003E
	rts

.endproc

